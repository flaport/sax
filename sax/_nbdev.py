# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"Array": "00_typing.ipynb",
         "Int": "00_typing.ipynb",
         "Float": "00_typing.ipynb",
         "ComplexFloat": "00_typing.ipynb",
         "Settings": "00_typing.ipynb",
         "SDict": "00_typing.ipynb",
         "SCoo": "00_typing.ipynb",
         "SDense": "00_typing.ipynb",
         "SType": "00_typing.ipynb",
         "Model": "00_typing.ipynb",
         "ModelFactory": "00_typing.ipynb",
         "GeneralModel": "00_typing.ipynb",
         "Models": "00_typing.ipynb",
         "Instance": "00_typing.ipynb",
         "GeneralInstance": "00_typing.ipynb",
         "Instances": "00_typing.ipynb",
         "Netlist": "00_typing.ipynb",
         "LogicalNetlist": "00_typing.ipynb",
         "is_float": "00_typing.ipynb",
         "is_complex": "00_typing.ipynb",
         "is_complex_float": "00_typing.ipynb",
         "is_sdict": "00_typing.ipynb",
         "is_scoo": "00_typing.ipynb",
         "is_sdense": "00_typing.ipynb",
         "is_model": "00_typing.ipynb",
         "is_model_factory": "00_typing.ipynb",
         "validate_model": "00_typing.ipynb",
         "is_instance": "00_typing.ipynb",
         "is_netlist": "00_typing.ipynb",
         "is_stype": "00_typing.ipynb",
         "is_singlemode": "00_typing.ipynb",
         "is_multimode": "00_typing.ipynb",
         "is_mixedmode": "00_typing.ipynb",
         "sdict": "00_typing.ipynb",
         "scoo": "00_typing.ipynb",
         "sdense": "00_typing.ipynb",
         "modelfactory": "00_typing.ipynb",
         "__repr__": "01_patched.ipynb",
         "block_diag": "02_utils.ipynb",
         "clean_string": "02_utils.ipynb",
         "copy_settings": "02_utils.ipynb",
         "validate_settings": "02_utils.ipynb",
         "try_float": "02_utils.ipynb",
         "flatten_dict": "02_utils.ipynb",
         "unflatten_dict": "02_utils.ipynb",
         "get_ports": "02_utils.ipynb",
         "get_port_combinations": "02_utils.ipynb",
         "get_settings": "02_utils.ipynb",
         "grouped_interp": "02_utils.ipynb",
         "merge_dicts": "02_utils.ipynb",
         "mode_combinations": "02_utils.ipynb",
         "reciprocal": "02_utils.ipynb",
         "rename_params": "02_utils.ipynb",
         "rename_ports": "02_utils.ipynb",
         "update_settings": "02_utils.ipynb",
         "validate_not_mixedmode": "02_utils.ipynb",
         "validate_multimode": "02_utils.ipynb",
         "validate_sdict": "02_utils.ipynb",
         "get_inputs_outputs": "02_utils.ipynb",
         "cache": "03_caching.ipynb",
         "cache_clear": "03_caching.ipynb",
         "multimode": "04_multimode.ipynb",
         "singlemode": "04_multimode.ipynb",
         "straight": "05_models.ipynb",
         "coupler": "05_models.ipynb",
         "unitary": "05_models.ipynb",
         "passthru": "05_models.ipynb",
         "copier": "05_models.ipynb",
         "get_models": "05_models.ipynb",
         "models": "05_models.ipynb",
         "netlist": "06_netlist.ipynb",
         "netlist_from_yaml": "06_netlist.ipynb",
         "logical_netlist": "06_netlist.ipynb",
         "circuit_backends": "07_backends.ipynb",
         "evaluate_circuit": "07a_backends_default.ipynb",
         "solve_klu": "07b_backends_klu.ipynb",
         "mul_coo": "07b_backends_klu.ipynb",
         "evaluate_circuit_klu": "07b_backends_klu.ipynb",
         "split_port": "07c_backends_additive.ipynb",
         "graph_edges": "07c_backends_additive.ipynb",
         "prune_internal_output_nodes": "07c_backends_additive.ipynb",
         "get_possible_paths": "07c_backends_additive.ipynb",
         "path_lengths": "07c_backends_additive.ipynb",
         "evaluate_circuit_additive": "07c_backends_additive.ipynb",
         "circuit": "08_circuit.ipynb",
         "circuit_from_netlist": "08_circuit.ipynb",
         "circuit_from_yaml": "08_circuit.ipynb",
         "circuit_from_gdsfactory": "08_circuit.ipynb",
         "mse": "09a_nn_loss.ipynb",
         "huber_loss": "09a_nn_loss.ipynb",
         "l2_reg": "09a_nn_loss.ipynb",
         "cartesian_product": "09b_nn_utils.ipynb",
         "denormalize": "09b_nn_utils.ipynb",
         "norm": "09b_nn_utils.ipynb",
         "get_normalization": "09b_nn_utils.ipynb",
         "get_df_columns": "09b_nn_utils.ipynb",
         "normalize": "09b_nn_utils.ipynb",
         "preprocess": "09c_nn_core.ipynb",
         "dense": "09c_nn_core.ipynb",
         "generate_dense_weights": "09c_nn_core.ipynb",
         "load_nn_weights_json": "09d_nn_io.ipynb",
         "save_nn_weights_json": "09d_nn_io.ipynb",
         "get_available_sizes": "09d_nn_io.ipynb",
         "get_dense_weights_path": "09d_nn_io.ipynb",
         "get_norm_path": "09d_nn_io.ipynb",
         "load_nn_dense": "09d_nn_io.ipynb",
         "__author__": "99_init.ipynb",
         "__version__": "99_init.ipynb"}

modules = ["typing_.py",
           "patched.py",
           "utils.py",
           "caching.py",
           "multimode.py",
           "models.py",
           "netlist.py",
           "backends/__init__.py",
           "backends/default.py",
           "backends/klu.py",
           "backends/additive.py",
           "circuit.py",
           "nn/__init__.py",
           "nn/loss.py",
           "nn/utils.py",
           "nn/core.py",
           "nn/io.py",
           "__init__.py"]

doc_url = "https://flaport.github.io/sax/"

git_url = "https://github.com/flaport/sax/"

def custom_doc_links(name): return None
