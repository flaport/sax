"""SAX: S + Autograd + XLA."""

from __future__ import annotations

__author__ = "Floris Laporte"
__version__ = "0.14.7"

# isort: off
from .saxtypes import (
    AnyNetlist,
    ArrayLike,
    Backend,
    BackendOrDefault,
    Bool,
    BoolArray,
    BoolArrayLike,
    BoolLike,
    CircuitInfo,
    Complex,
    ComplexArray,
    ComplexArray1D,
    ComplexArray1DLike,
    ComplexArrayLike,
    ComplexLike,
    Component,
    Connections,
    Float,
    FloatArray,
    FloatArray1D,
    FloatArray1DLike,
    FloatArrayLike,
    FloatLike,
    IOLike,
    Instance,
    InstanceName,
    InstancePort,
    Instances,
    Int,
    IntArray,
    IntArray1D,
    IntArray1DLike,
    IntArrayLike,
    IntLike,
    Mode,
    Model,
    ModelFactory,
    ModelFactoryMM,
    ModelFactorySM,
    ModelMM,
    ModelSM,
    Models,
    ModelsMM,
    ModelsSM,
    Name,
    Net,
    Netlist,
    Nets,
    Placement,
    Placements,
    Port,
    PortCombination,
    PortCombinationMM,
    PortCombinationSM,
    PortMap,
    PortMapMM,
    PortMapSM,
    PortMode,
    Ports,
    RecursiveNetlist,
    SCoo,
    SCooMM,
    SCooModel,
    SCooModelFactory,
    SCooModelFactoryMM,
    SCooModelFactorySM,
    SCooModelMM,
    SCooModelSM,
    SCooSM,
    SDense,
    SDenseMM,
    SDenseModel,
    SDenseModelFactory,
    SDenseModelFactoryMM,
    SDenseModelFactorySM,
    SDenseModelMM,
    SDenseModelSM,
    SDenseSM,
    SDict,
    SDictMM,
    SDictModel,
    SDictModelFactory,
    SDictModelFactoryMM,
    SDictModelFactorySM,
    SDictModelMM,
    SDictModelSM,
    SDictSM,
    SType,
    STypeMM,
    STypeSM,
    Settings,
    SettingsValue,
    into,
    try_into,
)
from .constants import (
    C_M_S,
    C_UM_S,
    DEFAULT_MODE,
    DEFAULT_MODES,
    DEFAULT_WL_STEP,
    EPS,
    WL_C,
    WL_C_MAX,
    WL_C_MIN,
    WL_O,
    WL_O_MAX,
    WL_O_MIN,
    WLS_C,
    WLS_O,
)
from .loss import (
    huber_loss,
    l2_reg,
    mse,
)
from .s import (
    block_diag,
    get_mode,
    get_modes,
    get_port_combinations,
    get_ports,
    reciprocal,
    scoo,
    sdense,
    sdict,
)
from .utils import (
    Normalization,
    cartesian_product,
    clean_string,
    denormalize,
    flatten_dict,
    get_settings,
    grouped_interp,
    hash_dict,
    load_netlist,
    load_recursive_netlist,
    maybe,
    merge_dicts,
    normalization,
    normalize,
    read,
    rename_params,
    rename_ports,
    replace_kwargs,
    unflatten_dict,
    update_settings,
)
from .multimode import (
    multimode,
    singlemode,
)
from .netlist import (
    flatten_netlist,
    netlist,
)
from .circuit import (
    circuit,
    draw_dag,
    get_required_circuit_models,
)
from .backends import (
    analyze_circuit,
    analyze_circuit_additive,
    analyze_circuit_fg,
    analyze_circuit_forward,
    analyze_instances,
    analyze_instances_additive,
    analyze_instances_fg,
    analyze_instances_forward,
    backend_map,
    circuit_backends,
    evaluate_circuit,
    evaluate_circuit_additive,
    evaluate_circuit_fg,
    evaluate_circuit_forward,
    validate_circuit_backend,
)
from .models import (
    copier,
    coupler,
    passthru,
    straight,
    unitary,
)

__all__ = [  # noqa: RUF022
    "AnyNetlist",
    "ArrayLike",
    "Backend",
    "BackendOrDefault",
    "Bool",
    "BoolArray",
    "BoolArrayLike",
    "BoolLike",
    "C_M_S",
    "C_UM_S",
    "CircuitInfo",
    "Complex",
    "ComplexArray",
    "ComplexArray1D",
    "ComplexArray1DLike",
    "ComplexArrayLike",
    "ComplexLike",
    "Component",
    "Connections",
    "DEFAULT_MODE",
    "DEFAULT_MODES",
    "DEFAULT_WL_STEP",
    "EPS",
    "Float",
    "FloatArray",
    "FloatArray1D",
    "FloatArray1DLike",
    "FloatArrayLike",
    "FloatLike",
    "IOLike",
    "Instance",
    "InstanceName",
    "InstancePort",
    "Instances",
    "Int",
    "IntArray",
    "IntArray1D",
    "IntArray1DLike",
    "IntArrayLike",
    "IntLike",
    "Mode",
    "Model",
    "ModelFactory",
    "ModelFactoryMM",
    "ModelFactorySM",
    "ModelMM",
    "ModelSM",
    "Models",
    "ModelsMM",
    "ModelsSM",
    "Name",
    "Net",
    "Netlist",
    "Nets",
    "Normalization",
    "Placement",
    "Placements",
    "Port",
    "PortCombination",
    "PortCombinationMM",
    "PortCombinationSM",
    "PortMap",
    "PortMapMM",
    "PortMapSM",
    "PortMode",
    "Ports",
    "RecursiveNetlist",
    "SCoo",
    "SCooMM",
    "SCooModel",
    "SCooModelFactory",
    "SCooModelFactoryMM",
    "SCooModelFactorySM",
    "SCooModelMM",
    "SCooModelSM",
    "SCooSM",
    "SDense",
    "SDenseMM",
    "SDenseModel",
    "SDenseModelFactory",
    "SDenseModelFactoryMM",
    "SDenseModelFactorySM",
    "SDenseModelMM",
    "SDenseModelSM",
    "SDenseSM",
    "SDict",
    "SDictMM",
    "SDictModel",
    "SDictModelFactory",
    "SDictModelFactoryMM",
    "SDictModelFactorySM",
    "SDictModelMM",
    "SDictModelSM",
    "SDictSM",
    "SType",
    "STypeMM",
    "STypeSM",
    "Settings",
    "SettingsValue",
    "WLS_C",
    "WLS_O",
    "WL_C",
    "WL_C_MAX",
    "WL_C_MIN",
    "WL_O",
    "WL_O_MAX",
    "WL_O_MIN",
    "analyze_circuit",
    "analyze_circuit_additive",
    "analyze_circuit_fg",
    "analyze_circuit_forward",
    "analyze_instances",
    "analyze_instances_additive",
    "analyze_instances_fg",
    "analyze_instances_forward",
    "backend_map",
    "block_diag",
    "cartesian_product",
    "circuit",
    "circuit_backends",
    "clean_string",
    "copier",
    "coupler",
    "denormalize",
    "draw_dag",
    "evaluate_circuit",
    "evaluate_circuit_additive",
    "evaluate_circuit_fg",
    "evaluate_circuit_forward",
    "flatten_dict",
    "flatten_netlist",
    "get_mode",
    "get_modes",
    "get_port_combinations",
    "get_ports",
    "get_required_circuit_models",
    "get_settings",
    "grouped_interp",
    "hash_dict",
    "huber_loss",
    "into",
    "l2_reg",
    "load_netlist",
    "load_recursive_netlist",
    "maybe",
    "merge_dicts",
    "mse",
    "multimode",
    "netlist",
    "normalization",
    "normalize",
    "passthru",
    "read",
    "reciprocal",
    "rename_params",
    "rename_ports",
    "replace_kwargs",
    "scoo",
    "sdense",
    "sdict",
    "singlemode",
    "straight",
    "try_into",
    "unflatten_dict",
    "unitary",
    "update_settings",
    "validate_circuit_backend",
]
